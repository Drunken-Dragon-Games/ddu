on: 
  push:
    branches: 
    - acceptance
name: Docker Acceptance Publish
jobs:

  Docker-Acc-Publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: service_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 1s
          --health-timeout 5s
          --health-retries 5

    steps:

    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      id: config-aws-credentials
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Service build and test
      working-directory: service
      env:
        GITHUB_CI: "true"
      run: |
        npm run login:aws
        npm ci
        npm run build
        npm test

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d')"

    - name: Build, tag, and push docker image to Amazon ECR
      id: docker-build-push
      working-directory: service
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: identity-service
        IMAGE_TAG: a-${{ steps.date.outputs.date }}-${{ github.sha }}
      run: |
        echo "Image name $REGISTRY/$REPOSITORY:$IMAGE_TAG"
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Deploy Acceptance
      uses: bitovi/github-actions-deploy-eks-helm@v1.1.0
      env:
        IMAGE_TAG: a-${{ steps.date.outputs.date }}-${{ github.sha }}
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        cluster-name: ddu
        config-files: .github/values/acceptance.yaml
        chart-path: chart/
        namespace: acceptance
        values: image.tag=a-${{ steps.date.outputs.date }}-${{ github.sha }}
        name: identity-service
